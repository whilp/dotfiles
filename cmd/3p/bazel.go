package main

import (
	"io"
	"text/template"
)

type bazel struct {
	rules []rule
}

func (b *bazel) Render(out io.Writer) {
	var t = template.Must(template.New("name").Parse(tmpl))
	t.Execute(out, b)
}

func (b *bazel) Rules() []rule {
	return b.rules
}

func (b *bazel) Add(r ruler) {
	b.rules = append(b.rules, r.Rule())
}

type ruler interface {
	Rule() rule
}

type rule struct {
	Name       string
	Parameters map[string]string
}

var tmpl = `# This file is generated by cmd/3p.

load("@bazel_tools//tools/build_defs/repo:http.bzl", "http_archive")

def repo():
{{range $rule := .Rules}}
    {{$rule.Name}}(
    {{range $key, $val := .Parameters}}    {{$key}} = {{printf "%q" $val}},
    {{end}})
{{end}}
`
