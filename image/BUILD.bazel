load("//3p/deb:repo.bzl", "deb_files")
load("@bazel_tools//tools/build_defs/pkg:pkg.bzl", "pkg_tar")
load(
    "@io_bazel_rules_docker//container:container.bzl",
    "container_image",
)
load("@subpar//:subpar.bzl", "par_binary")

sh_binary(
    name = "run",
    srcs = ["run.sh"],
    data = [":image"],
)

# TODO: debugged most of this, rebug
container_image(
    name = "image",
    base = "@ubuntu//image",
    cmd = [
        "/usr/sbin/sshd",
        "-D",
    ],
    debs = deb_files(),
    env = {
        "HOME": "/home/me",
    },
    # Force rebuild when we observe new packages.
    files = ["//3p/deb:repo.bzl"],
    ports = ["22"],
    tars = [
        "//home:tar",
        ":etc",
        ":usr_bin",
        ":usr_local",
        ":slash",
    ],
    workdir = "/home/me",
)

pkg_tar(
    name = "slash",
    files = {
        ":empty": "/run/sshd/.keep",
    },
    package_dir = "/",
)

pkg_tar(
    name = "etc",
    files = {
        "@cacert//file": "./ssl/certs/ca-certificates.crt",
        # https://bugs.launchpad.net/ubuntu/+source/apt/+bug/1577926
        "apt.conf": "./apt/apt.conf",
        "sshd_config": "./ssh/sshd_config",
        "passwd": "./passwd",
        "group": "./group",
    },
    package_dir = "/etc",
)

pkg_tar(
    name = "usr_bin",
    srcs = [
        "@fzf",
        "@ripgrep//:rg",
        "@shellcheck",
    ],
    files = {
        "@bazel//file": "bazel",
        "@shfmt//file": "shfmt",
        "@org_golang_x_tools//cmd/goimports": "goimports",
        "@com_github_jstemmer_gotags//:gotags": "gotags",
        "@com_github_nsf_gocode//:gocode": "gocode",
        "@github_josharian_impl//:impl": "impl",
        "@com_github_derekparker_delve//cmd/dlv": "dlv",
        "@com_github_kisielk_errcheck//:errcheck": "errcheck",
        "@com_github_fatih_motion//:motion": "motion",
        "@com_github_rogpeppe_godef//:godef": "godef",
        "@com_github_davidrjenni_reftools//cmd/fillstruct": "fillstruct",
        "@org_golang_x_lint//golint": "golint",
        "@com_github_zmb3_gogetdoc//:gogetdoc": "gogetdoc",
        "@com_github_bazelbuild_buildtools//buildifier": "buildifier",
        "@com_github_bazelbuild_buildtools//buildozer": "buildozer",
        # TODO
        #"@com_github_bazelbuild_bazel_watcher//ibazel": "ibazel",
        "@bazel_gazelle//cmd/gazelle": "gazelle",
        "@com_github_shurcooL_markdownfmt//:markdownfmt": "markdownfmt",
        ":black.par": "black",
        ":flake8.par": "flake8",
    },
    mode = "0755",
    package_dir = "/usr/bin",
    symlinks = {
        "./usr/bin/python": "python3.6",
        "./usr/bin/python2": "python2.7",
        "./bin/nc": "nc.openbsd",
    },
)

pkg_tar(
    name = "usr_local",
    package_dir = "/usr/local",
    symlinks = {
        "./usr/local/bin/docker": "../docker/docker",
        "./usr/local/bin/nvim": "../nvim-linux64/bin/nvim",
        "./usr/local/bin/go": "../go/bin/go",
        "./usr/local/bin/godoc": "../go/bin/godoc",
        "./usr/local/bin/gofmt": "../go/bin/gofmt",
    },
    deps = [
        "@docker//file",
        "@nvim//file",
        "@org_golang_go//file",
        "@org_llvm_clang//:tar",
    ],
)

par_binary(
    name = "flake8",
    srcs = ["run-flake8.py"],
    main = "run-flake8.py",
    deps = [
        "@pypi_flake8//:pkg",
        "@pypi_pycodestyle//:pkg",
        "@pypi_pyflakes//:pkg",
    ],
)

par_binary(
    name = "black",
    srcs = ["@pypi_black//:black.py"],
    main = "@pypi_black//:black.py",
    zip_safe = False,
    deps = [
        "@pypi_black//:pkg",
    ],
)

pkg_tar(
    name = "hack",
    files = deb_files(),
    deps = [
        ":etc",
        ":slash",
        ":usr_bin",
        ":usr_local",
        "//3p/deb:repo.bzl",
        "//home:tar",
    ],
)

# TODO: debug
sh_test(
    name = "test",
    srcs = ["test.sh"],
    data = [
        ":etc",
        ":slash",
        ":usr_bin",
        ":usr_local",
        "//home:tar",
        "//3p/deb:repo.bzl",
    ] + deb_files(),
)
