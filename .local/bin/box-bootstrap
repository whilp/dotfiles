#!/usr/bin/env luajit

local status_handle = io.popen("gh auth status -a -t 2>&1")
if not status_handle then
  os.exit(0)
end

local status = status_handle:read("*a")
status_handle:close()

local hosts = {}
local current_host = nil
local is_active = false

for line in status:gmatch("[^\n]+") do
  -- Check if this is a host line (no leading whitespace)
  if not line:match("^%s") then
    current_host = line
    is_active = false
  elseif current_host then
    -- Check if this is an active account line
    if line:match("Active account:%s+true") then
      is_active = true
    end
    -- Check if this is a token line
    local tok = line:match("Token:%s+([^%s]+)")
    if tok and is_active then
      hosts[current_host] = tok
    end
  end
end

-- Output bash commands to authenticate on remote for all active hosts
for host, token in pairs(hosts) do
  io.write(string.format("echo %s | gh auth login -p ssh -h %s --with-token 2>/dev/null\n", token, host))
end
